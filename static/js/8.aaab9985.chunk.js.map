{"version":3,"file":"static/js/8.aaab9985.chunk.js","mappings":"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","sources":["pages/RegisterPage/RegisterPage.styled.jsx","helpers/validationSchemas/RegisterValidationSchema.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\n// • позиционирование элемента относительно других (position/top/left)\n// • margin/padding/width/height\n// • флексы\n// • все стили borders\n// • цвет/цвет фона\n// • типография\n// • transition\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 42px;\n  margin-left: 20px;\n  margin-right: 20px;\n`;\n\nexport const RegisterForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  list-style: none;\n  flex-direction: column;\n`;\n\nexport const Input = styled(Field)`\n  background-color: ${p => p.theme.colors.background};\n  border-radius: 40px;\n  border: 1px solid ${p => p.theme.colors.accent};\n  width: 280px;\n  padding-top: 11px;\n  padding-bottom: 12px;\n  padding-left: 12px;\n  margin-top: 24px;\n  line-height: 19px;\n\n  font-size: ${p => p.theme.fontSizes[1]};\n`;\nexport const H2 = styled.h2`\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizes[5]};\n  line-height: 33px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  justify-content: center;\n\n  color: #111111;\n`;\nexport const RegisterButton = styled.button`\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.radii.small};\n\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.background};\n  transition: color ${p => p.theme.transition.main},\n    background-color ${p => p.theme.transition.main};\n\n  &:hover {\n    color: ${p => p.theme.colors.background};\n    background-color: ${p => p.theme.colors.accent};\n  }\n\n  margin-top: 12px;\n\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  letter-spacing: 0.04em;\n  width: 280px;\n\n  padding: 8px;\n`;\nexport const Text = styled.p`\n  margin-top: 40px;\n  font-size: 12px;\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: rgba(17, 17, 17, 0.6);\n`;\nexport const ErrorValid = styled(ErrorMessage)`\n  margin-left: -50px;\n  margin-top: 2px;\n  color: #e2001a;\n  font-size: 11px;\n  line-height: 15px;\n`;\n","import * as Yup from 'yup';\n\nconst registerValidationSchema = Yup.object({\n  email: Yup.string()\n    .matches(\n      /^(?=.{1,63}$)(?=.{2,}@)[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n      'Error! Email must be in a format: aaaaa@aaa.aaa'\n    )\n    .min(12, 'At least 12 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .required('Required field'),\n  password: Yup.string()\n    .matches(/^\\S+$/, 'Space is not allowed')\n    .min(7, 'At least 7 symbols')\n    .max(32, 'Maximum 32 symbols')\n    .required('Required field'),\n  confirm: Yup.string()\n    .matches(/^\\S+$/, 'Does not match the password')\n    .min(7, 'Does not match the password')\n    .max(32, 'Does not match the password')\n    .required('Required field'),\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-ЯіІїЇґҐ\\s]*[a-zA-Zа-яА-ЯіІїЇґҐ][a-zA-Zа-яА-ЯіІїЇґҐ\\s]*$/,\n      'Only cyrillic and latin letters are allowed'\n    )\n    .required('Required field'),\n  city: Yup.string().required('Required field (City, region)'),\n  phone: Yup.string()\n    .matches(/^\\+380\\d{9}$/, 'Invalid phone number(+380111111111)')\n    .required('Required field'),\n});\n\nexport default registerValidationSchema;\n","import {\n  H2,\n  Wrapper,\n  Input,\n  RegisterForm,\n  RegisterButton,\n  Text,\n  ErrorValid,\n} from 'pages/RegisterPage/RegisterPage.styled';\nimport { Formik } from 'formik';\n\nimport { Container } from 'globalStyles/globalStyle';\nimport registerValidationSchema from 'helpers/validationSchemas/RegisterValidationSchema';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { signup } from 'redux/auth/operations';\n// import RouteFormLoginRegister from 'pages/routeFormLoginRegister';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirm: '',\n  name: '',\n  city: '',\n  phone: '',\n};\n\nexport const RegisterPage = () => {\n  const [currentStep, setCarrentStep] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const handleNextStep = () => {\n    setCarrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = () => {\n    setCarrentStep(prev => prev - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} />,\n    <StepTwo back={handlePrevStep} />,\n  ];\n\n  const handleSubmit = (\n    { email, password, name, city, phone },\n    { resetForm }\n  ) => {\n    dispatch(signup({ email, password, name, city, phone }));\n    resetForm();\n\n    console.log(email);\n    console.log(password);\n  };\n\n  return (\n    <section>\n      <Container>\n        <Wrapper>\n          <>\n            <H2>Registration</H2>\n            <Formik\n              initialValues={initialValues}\n              onSubmit={handleSubmit}\n              validationSchema={registerValidationSchema}\n              autoComplete=\"off\"\n            >\n              <RegisterForm>{steps[currentStep]}</RegisterForm>\n            </Formik>\n            <Text>\n              Already have an account?\n              <a href=\"http://localhost:3000/petly\">Login</a>\n            </Text>\n\n            {/* <RouteFormLoginRegister\n            link=\"/login\"\n            question=\"Already have an account??\"\n            pageName=\"login\"\n          /> */}\n          </>\n        </Wrapper>\n      </Container>\n    </section>\n  );\n};\n\nconst StepOne = props => {\n  return (\n    <>\n      <Input type=\"email\" name=\"email\" placeholder=\"Email\" autoComplete=\"off\" />\n      <ErrorValid name=\"email\" component=\"div\" />\n      <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n      <ErrorValid name=\"password\" component=\"div\" />\n      <Input type=\"password\" name=\"confirm\" placeholder=\"Confirm Password\" />\n      <ErrorValid name=\"confirm\" component=\"div\" />\n      <RegisterButton\n        type=\"button\"\n        onClick={props.next}\n        id=\"next\"\n        // disabled={props.valid}\n      >\n        Next\n      </RegisterButton>\n    </>\n  );\n};\nconst StepTwo = props => {\n  return (\n    <>\n      <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n      <ErrorValid name=\"name\" component=\"div\" />\n      <Input type=\"text\" name=\"city\" placeholder=\"City, region\" />\n      <ErrorValid name=\"city\" component=\"div\" />\n      <Input type=\"tel\" name=\"phone\" placeholder=\"Mobile phone\" />\n      <ErrorValid name=\"phone\" component=\"div\" />\n\n      <RegisterButton type=\"submit\">Register</RegisterButton>\n      <RegisterButton type=\"button\" onClick={props.back}>\n        Back\n      </RegisterButton>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Wrapper","styled","RegisterForm","Form","Input","Field","p","theme","colors","background","accent","fontSizes","H2","RegisterButton","borders","bold","radii","small","black","transition","main","Text","ErrorValid","ErrorMessage","Yup","email","matches","min","max","required","password","confirm","name","city","phone","initialValues","StepOne","props","type","placeholder","autoComplete","component","onClick","next","id","StepTwo","back","useState","currentStep","setCarrentStep","dispatch","useDispatch","steps","prev","onSubmit","resetForm","signup","console","log","validationSchema","registerValidationSchema","href"],"sourceRoot":""}