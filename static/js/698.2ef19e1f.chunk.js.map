{"version":3,"file":"static/js/698.2ef19e1f.chunk.js","mappings":"oNAuBA,EArBeA,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJG,IAAI,GAAI,uBACRC,IAAI,GAAI,sBACRC,QACC,uEACA,iBAEDC,SAAS,6BACZC,SAAUP,EAAAA,KAEPG,IAAI,EAAG,sBACPC,IAAI,GAAI,sBACRC,QACC,QACA,+DAEDC,SAAS,kC,2DCVd,EAR+B,SAAC,GAAkC,IAAhCE,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChD,OACE,0BACE,0BAAOD,KACP,SAAC,KAAD,CAAME,GAAIH,EAAV,SAAiBE,MAGtB,E,6BCLYE,EAAYC,EAAAA,GAAAA,GAAH,8GAEL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACC,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACL,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IAEHC,GAAaN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,wFAGR,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IAEHG,EAAcR,EAAAA,GAAAA,OAAH,8UAOL,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,MAAMC,KAAlB,GAGTR,EAAAA,EAAAA,OAAAA,OACW,SAAAD,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,MAAnB,GAEPV,EAAAA,EAAAA,WAAAA,KAIQA,EAAAA,EAAAA,OAAAA,OACXA,EAAAA,EAAAA,OAAAA,OAIAW,GAAQb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,uOACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMa,QAAQC,MAApB,IAA6B,SAAAf,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,MAAnB,IACxB,SAAAX,GAAC,OAAIA,EAAEC,MAAMO,MAAMQ,GAAlB,IACP,SAAAhB,GAAC,OAAIA,EAAEC,MAAMS,OAAOO,WAAnB,IACG,SAAAjB,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACE,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACH,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACJ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACC,SAAAJ,GAAC,OAAIA,EAAEC,MAAMiB,YAAYC,MAAxB,IACP,SAAAnB,GAAC,OAAIA,EAAEC,MAAMS,OAAOP,IAAnB,IACU,SAAAH,GAAC,OAAIA,EAAEC,MAAMS,OAAOU,UAAnB,ICSvB,EA1CyB,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,SAACC,EAAA,EAAD,CAAKC,GAAG,UAAR,UACE,UAAC,IAAD,YACE,SAAC1B,EAAD,qBACA,SAAC,KAAD,CACE2B,cAAe,CAAErC,MAAO,GAAIK,SAAU,IACtCiC,SAfa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAI,QAASH,GAErBN,GAASU,EAAAA,EAAAA,IAAMJ,IAEfC,GAED,EASOI,iBAAkBC,EAHpB,UAKE,UAAC5B,EAAD,CAAY6B,aAAa,MAAzB,WACE,SAACtB,EAAD,CAAOuB,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQ7C,UAAQ,KAC7D,SAACoB,EAAD,CACEuB,KAAK,WACLC,KAAK,WACLC,YAAY,WACZ7C,UAAQ,KAEV,SAACe,EAAD,CAAa4B,KAAK,SAAlB,yBAGJ,SAAC,EAAD,CACEzC,KAAK,YACLC,SAAS,yBACTC,SAAS,iBAKlB,C","sources":["helpers/validationSchemas/loginSchema.jsx","pages/routeFormLoginRegister.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .min(12, 'At least 12 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .matches(\n      /^(?=.{1,63}$)(?=.{2,}@)[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n      'Invalid email'\n    )\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(7, 'At least 7 symbols')\n    .max(32, 'Maximum 32 symbols')\n    .matches(\n      /^\\S+$/,\n      'Password can contain any letters and symbols without spaces'\n    )\n    .required('Password is a required field'),\n});\n\nexport default schema;\n","import { Link } from 'react-router-dom';\n\nconst RouteFormLoginRegister = ({ link, question, pageName }) => {\n  return (\n    <p>\n      <span>{question}</span>\n      <Link to={link}>{pageName}</Link>\n    </p>\n  );\n};\nexport default RouteFormLoginRegister;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport { theme } from 'globalStyles/theme';\n\nexport const TitleAuth = styled.h1`\n  text-align: center;\n  font-family: ${p => p.theme.fonts.text};\n  margin-bottom: ${p => p.theme.fontSizes[9]};\n  font-size: ${p => p.theme.fontSizes[8]};\n`;\nexport const FormCustom = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  font-size: ${p => p.theme.fontSizes[3]};\n`;\nexport const LoginButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 10px;\n  gap: 8px;\n  border: inherit;\n  border-radius: ${p => p.theme.radii.small};\n  cursor: pointer;\n\n  color: ${theme.colors.white};\n  background-color: ${p => p.theme.colors.accent};\n\n  transition: ${theme.transition.main};\n\n  &:hover,\n  :active {\n    background-color: ${theme.colors.accent};\n    color: ${theme.colors.white};\n  }\n`;\n\nexport const Input = styled(Field)`\n  border: ${p => p.theme.borders.normal}${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.radii.big};\n  outline: ${p => p.theme.colors.transparent};\n  padding-top: ${p => p.theme.fontSizes[0]};\n  padding-bottom: ${p => p.theme.fontSizes[0]};\n  padding-left: ${p => p.theme.fontSizes[2]};\n  font-size: ${p => p.theme.fontSizes[5]};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.background};\n`;\n","import { Formik } from 'formik';\nimport schema from 'helpers/validationSchemas/loginSchema';\nimport { Container } from 'globalStyles/globalStyle';\nimport { Box } from 'components/Box/Box';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations.js';\nimport RouteFormLoginRegister from '../routeFormLoginRegister.jsx';\nimport {\n  TitleAuth,\n  FormCustom,\n  LoginButton,\n  Input,\n} from './LoginPage.styled.jsx';\n\nexport const LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log('Hallo', values);\n\n    dispatch(logIn(values));\n    // if (error !== null) {\n    resetForm();\n    // }\n  };\n\n  return (\n    <Box as=\"section\">\n      <Container>\n        <TitleAuth>Login</TitleAuth>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n        >\n          <FormCustom autoComplete=\"off\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" required />\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n            <LoginButton type=\"submit\">Login</LoginButton>\n          </FormCustom>\n        </Formik>\n        <RouteFormLoginRegister\n          link=\"/register\"\n          question=\"Don't have an account?\"\n          pageName=\"Register\"\n        />\n      </Container>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n"],"names":["yup","shape","email","min","max","matches","required","password","link","question","pageName","to","TitleAuth","styled","p","theme","fonts","text","fontSizes","FormCustom","Form","LoginButton","radii","small","colors","accent","Input","Field","borders","normal","big","transparent","fontWeights","medium","background","dispatch","useDispatch","Box","as","initialValues","onSubmit","values","resetForm","console","log","logIn","validationSchema","schema","autoComplete","type","name","placeholder"],"sourceRoot":""}