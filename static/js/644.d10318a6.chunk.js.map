{"version":3,"file":"static/js/644.d10318a6.chunk.js","mappings":"4NAEaA,EAAcC,EAAAA,GAAAA,GAAH,6GASXC,EAAaD,EAAAA,GAAAA,GAAH,gaACJ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACD,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEG,cAAgB,CAAtB,IAGQ,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIZ,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,GAAlB,IAEE,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,KAAnB,IAGZC,EAAgBV,EAAAA,GAAAA,IAAH,4CAIbW,EAAiBX,EAAAA,GAAAA,EAAH,mKAGd,SAAAE,GAAC,OAAIA,EAAEC,MAAMK,OAAOI,MAAnB,IAEG,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,UAAU,EAAtB,IACC,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,YAAYC,IAAxB,IACD,SAAAb,GAAC,OAAIA,EAAEC,MAAMa,YAAYC,IAAxB,IACE,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,cAAcD,IAA1B,I,UCwCvB,EA3E2B,SAAC,GAAiB,IAAfE,EAAc,EAAdA,QACtBC,EAAWD,EAAQE,KACvB,YAUO,IATLC,EASI,EATJA,MACAC,EAQI,EARJA,IACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,WACAC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,IAEMC,EAAa,oBAGfC,EAAW,CAAC,EAEZH,GAAgC,IAApBA,EAASI,SACvBD,EAAWH,EAASK,MAAK,SAAAC,GAAI,OAAoB,IAAhBA,EAAKC,MAAT,KAG/B,MAAqBJ,EAAbK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,GAEd,OACE,UAACrC,EAAD,CAAsBI,cAAec,EAAQc,OAA7C,UACGV,GACC,SAACZ,EAAD,CAAgB4B,OAAO,SAASC,IAAI,aAAaC,KAAMlB,EAAvD,SACGD,KAGH,uBAAIA,KAEN,UAACZ,EAAD,YACE,0BACE,gBAAKgC,IAAKf,GApBhB,mFAoBmDgB,IAAKrB,OAEpD,4BACE,iCACCe,GAAQC,GACP,yBACGD,EADH,MACYC,MAGZ,uBAAIP,KAEN,oCACCP,GACC,cAAGe,OAAO,SAASC,IAAI,aAAaC,KAAMhB,EAA1C,SACGD,KAGH,uBAAIO,KAEN,kCACCL,GACC,cAAGe,KAAI,iBAAYf,GAAnB,SAA6BA,KAE7B,uBAAIK,KAEN,iCACCH,GACC,cAAGa,KAAI,cAASb,GAAhB,SAA0BA,KAE1B,uBAAIG,YAvCKD,EA6CpB,IAGH,OAAO,SAAC/B,EAAD,UAAcqB,GACtB,E,SC/DD,EAd8B,WAE5B,IAAQD,GAAYyB,EAAAA,EAAAA,GAAgB,eAA5BzB,QAER,OACE,8BACE,UAAC,IAAD,YACE,yCACA,SAAC,EAAD,CAAaA,QAASA,QAI7B,C","sources":["components/FriendsList/FriendsList.styled.jsx","components/FriendsList/FriendsList.jsx","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ListFriends = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n\n    a {\n        display: block;\n    }\n`\n\nexport const ItemFriend = styled.li`\n    padding-top: ${p => p.theme.space[4]}px;\n    padding-bottom: ${p => p.theme.space[4]}px;\n    padding-left: ${p => p.theme.space[2]}px;\n    margin-right: ${p => p.theme.space[5]}px;\n    &:nth-child(3n) {\n        margin-right: 0;\n    }\n    margin-bottom: ${p => p.theme.space[5]}px;\n    &:nth-last-child(${p => p.resultsLength % 3}) {\n        margin-bottom: 0;\n    }\n    width: calc((100% / 3) - (${p => p.theme.space[5]}px * 2 / 3));\n    \n    justify-content: center;\n\n    border-radius: ${p => p.theme.radii.big};\n\n    background-color: ${p => p.theme.colors.white};\n`\n\nexport const ItemFriendBox = styled.div`\n    display: flex;\n`\n\nexport const ItemFriendName = styled.a`\n    text-align: center;\n\n    color: ${p => p.theme.colors.accent};\n\n    font-size: ${p => p.theme.fontSizes[4]};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    line-height: ${p => p.theme.lineHeights.text};\n    letter-spacing: ${p => p.theme.letterSpacing.text};\n`","// import FriendsPopUp from \"components/FriendsPopUp\";\n\nimport {\n  ListFriends,\n  ItemFriend,\n  ItemFriendBox,\n  ItemFriendName,\n} from './FriendsList.styled';\n\nexport const FriendsList = ({ results }) => {\n  const elements = results.map(\n    ({\n      title,\n      url,\n      address,\n      addressUrl,\n      email,\n      imageUrl,\n      phone,\n      workDays,\n      _id,\n    }) => {\n      const emptyField = '-----------------';\n      const placeholder =\n        'https://ucarecdn.com/63e1c87e-c59a-4af0-85f9-2eea65e645f3/placeholder_friend.png';\n      let workTime = {};\n\n      if (workDays && workDays.length !== 0) {\n        workTime = workDays.find(item => item.isOpen === true);\n      }\n\n      const { from, to } = workTime;\n\n      return (\n        <ItemFriend key={_id} resultsLength={results.length}>\n          {url ? (\n            <ItemFriendName target=\"_blank\" rel=\"noreferrer\" href={url}>\n              {title}\n            </ItemFriendName>\n          ) : (\n            <p>{title}</p>\n          )}\n          <ItemFriendBox>\n            <div>\n              <img src={imageUrl ? imageUrl : placeholder} alt={title} />\n            </div>\n            <div>\n              <p>Time:</p>\n              {from && to ? (\n                <p>\n                  {from} - {to}\n                </p>\n              ) : (\n                <p>{emptyField}</p>\n              )}\n              <p>Address:</p>\n              {address ? (\n                <a target=\"_blank\" rel=\"noreferrer\" href={addressUrl}>\n                  {address}\n                </a>\n              ) : (\n                <p>{emptyField}</p>\n              )}\n              <p>Email:</p>\n              {email ? (\n                <a href={`mailto:${email}`}>{email}</a>\n              ) : (\n                <p>{emptyField}</p>\n              )}\n              <p>Phone</p>\n              {phone ? (\n                <a href={`tel:${phone}`}>{phone}</a>\n              ) : (\n                <p>{emptyField}</p>\n              )}\n            </div>\n          </ItemFriendBox>\n        </ItemFriend>\n      );\n    }\n  );\n\n  return <ListFriends>{elements}</ListFriends>;\n};\nexport default FriendsList;\n","import { useFetchingData } from 'hooks';\n\nimport FriendsList from 'components/FriendsList';\n\nimport { Container } from 'globalStyles/globalStyle';\n\nexport const OurFriendsPage = () => {\n  // const { results, status } = useFetchingData('api/friends');\n  const { results } = useFetchingData('api/friends');\n\n  return (\n    <section>\n      <Container>\n        <h1>Our friends</h1>\n        <FriendsList results={results} />\n      </Container>\n    </section>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["ListFriends","styled","ItemFriend","p","theme","space","resultsLength","radii","big","colors","white","ItemFriendBox","ItemFriendName","accent","fontSizes","fontWeights","bold","lineHeights","text","letterSpacing","results","elements","map","title","url","address","addressUrl","email","imageUrl","phone","workDays","_id","emptyField","workTime","length","find","item","isOpen","from","to","target","rel","href","src","alt","useFetchingData"],"sourceRoot":""}